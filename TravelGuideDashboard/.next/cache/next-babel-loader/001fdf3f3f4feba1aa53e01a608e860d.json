{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shreyvijayvargiya\\\\Desktop\\\\CodingChallengeProjects\\\\TravelGuideDashboard\\\\components\\\\Searchbar\\\\index.jsx\";\nvar __jsx = React.createElement;\nimport React, { useRef, useEffect, useState } from 'react';\nimport { Container } from './styles';\nimport axios from 'axios';\n\nconst Searchbar = () => {\n  const stateRef = useRef();\n  const cityRef = useRef();\n  const {\n    0: cities,\n    1: setCities\n  } = useState([]);\n  const {\n    0: state,\n    1: setState\n  } = useState([]);\n  const statesUrl = 'https://indian-cities-api-nocbegfhqg.now.sh/cities';\n  useEffect(() => {\n    const states = [];\n    axios.get(statesUrl).then(res => {\n      res.data.map(item => {\n        if (states.indexOf(item.State) < 0) {\n          states.push(item.State);\n        }\n      });\n      setState(states);\n    });\n  }, []);\n\n  const handleCitySelect = () => {\n    const stateName = stateRef.current.value;\n    const cityUrl = `https://indian-cities-api-nocbegfhqg.now.sh/cities?State=${stateName}`;\n    axios.get(cityUrl).then(res => {\n      res.data.map(item => {\n        setCities(oldArray => [...oldArray, item.City]);\n      });\n    });\n  };\n\n  return __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 3\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 4\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 6\n    }\n  }, \" Select State \"), __jsx(\"input\", {\n    list: \"states\",\n    placeholder: \"Select State\",\n    ref: stateRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 6\n    }\n  }), __jsx(\"datalist\", {\n    id: \"states\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 6\n    }\n  }, state && state.map((item, i) => __jsx(\"option\", {\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 8\n    }\n  }, item)))), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 4\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, \" Select City \"), __jsx(\"input\", {\n    list: \"cities\",\n    placeholder: \"Selecy City\",\n    className: \"cities\",\n    onInput: () => handleCitySelect(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }), __jsx(\"datalist\", {\n    id: \"cities\",\n    ref: cityRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, cities && cities.map((item, i) => __jsx(\"option\", {\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, item)))), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 4\n    }\n  }, __jsx(\"img\", {\n    src: \"/assets/addMarkerIcon.jpg\",\n    alt: \"Add Marker\",\n    width: 80,\n    height: 80,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 4\n    }\n  }, __jsx(\"img\", {\n    src: \"/assets/profile.jpg\",\n    width: 80,\n    height: 80,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  })));\n};\n\nexport default Searchbar;","map":{"version":3,"sources":["C:/Users/shreyvijayvargiya/Desktop/CodingChallengeProjects/TravelGuideDashboard/components/Searchbar/index.jsx"],"names":["React","useRef","useEffect","useState","Container","axios","Searchbar","stateRef","cityRef","cities","setCities","state","setState","statesUrl","states","get","then","res","data","map","item","indexOf","State","push","handleCitySelect","stateName","current","value","cityUrl","oldArray","City","i"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport { Container } from './styles';\nimport axios from 'axios';\n\nconst Searchbar = () => {\n\tconst stateRef = useRef();\n\tconst cityRef = useRef();\n\tconst [ cities, setCities ] = useState([ ]);\n\tconst [ state, setState ] = useState([ ]);\n\tconst statesUrl = 'https://indian-cities-api-nocbegfhqg.now.sh/cities';\n\n\tuseEffect(() => {\n\t\tconst states = [];\n\t\taxios.get(statesUrl).then((res) => {\n\t\t\tres.data.map(item => {\n\t\t\t\tif(states.indexOf(item.State) < 0){\n\t\t\t\t\tstates.push(item.State)\n\t\t\t\t}\n\t\t\t});\n\t\t\tsetState(states);\n\t\t});\n\t\t\n\t}, [ ]);\n\t\n\tconst handleCitySelect = () => {\n\t\tconst stateName = stateRef.current.value;\n\t\tconst cityUrl = `https://indian-cities-api-nocbegfhqg.now.sh/cities?State=${stateName}`\n\t\taxios.get(cityUrl).then((res) => {\n\t\t\tres.data.map(item => {\n\t\t\t\tsetCities((oldArray) => [ ...oldArray, item.City ]);\n\t\t\t});\n\t\t});\n\t};\n\treturn (\n\t\t<Container>\n\t\t\t<div>\n\t\t\t\t\t<label> Select State </label>\n\t\t\t\t\t<input list=\"states\" placeholder=\"Select State\" ref={stateRef} />\n\t\t\t\t\t<datalist id=\"states\">\n\t\t\t\t\t\t{state && state.map((item, i) => (\n\t\t\t\t\t\t\t<option key={i}>{item}</option>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</datalist>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<label> Select City </label>\n\t\t\t\t<input list=\"cities\" placeholder=\"Selecy City\" className=\"cities\" \n\t\t\t\t\tonInput={() => handleCitySelect()} />\n\t\t\t\t<datalist  id=\"cities\" ref={cityRef} >\n\t\t\t\t\t{cities && cities.map((item, i) => (\n\t\t\t\t\t\t<option key={i}>{item}</option>\n\t\t\t\t\t))}\n\t\t\t\t</datalist>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<img src='/assets/addMarkerIcon.jpg' alt=\"Add Marker\" width={80} height={80}  />\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<img src=\"/assets/profile.jpg\" width={80} height={80} />\n\t\t\t</div>\n\t\t</Container>\n\t);\n};\nexport default Searchbar;\n\n"]},"metadata":{},"sourceType":"module"}