{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\shreyvijayvargiya\\\\Desktop\\\\CodingChallengeProjects\\\\TravelGuideDashboard\\\\components\\\\MapBody\\\\index.jsx\";\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { Container } from './styles';\nimport MapGL from \"react-map-gl\";\nimport Geocode from 'react-geocode';\n\nvar MapBody = function MapBody(_ref) {\n  var cityName = _ref.cityName;\n  var mapStyle = {\n    width: '80%',\n    height: '70vh',\n    margin: 'auto',\n    borderRadius: '16px'\n  };\n\n  var _useState = useState({}),\n      viewport = _useState[0],\n      setViewPort = _useState[1];\n\n  var Token = \"pk.eyJ1Ijoic2hyZXl2aWpheXZhcmdpeWEiLCJhIjoiY2pzamxxbG5zMHppMTQ0cW91OTd0aHBwZCJ9.zT0Jji19YEj8pR5P495KrA\";\n\n  var _useState2 = useState({}),\n      coords = _useState2[0],\n      setCoords = _useState2[1];\n\n  useEffect(function () {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(function (position) {\n        var latitude = position.coords.latitude;\n        var longitude = position.coords.longitude;\n        var zoom = 9;\n        var height = '70vh';\n        var width = '80%';\n        setViewPort({\n          latitude: latitude,\n          longitude: longitude,\n          zoom: zoom,\n          height: height,\n          width: width\n        });\n      });\n    }\n\n    Geocode.fromAddress(cityName).then(function (response) {\n      var _response$results$ = response.results[0],\n          lat = _response$results$.lat,\n          lng = _response$results$.lng;\n    });\n  }, []);\n  console.log(cityName, 'cityName inside Mapbody');\n  return __jsx(MapGL, _extends({}, viewport, {\n    style: mapStyle,\n    mapStyle: \"mapbox://styles/mapbox/dark-v10\",\n    mapboxApiAccessToken: Token,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 3\n    }\n  }));\n};\n\nexport default MapBody;","map":{"version":3,"sources":["C:/Users/shreyvijayvargiya/Desktop/CodingChallengeProjects/TravelGuideDashboard/components/MapBody/index.jsx"],"names":["React","useEffect","useState","Container","MapGL","Geocode","MapBody","cityName","mapStyle","width","height","margin","borderRadius","viewport","setViewPort","Token","coords","setCoords","navigator","geolocation","getCurrentPosition","position","latitude","longitude","zoom","fromAddress","then","response","results","lat","lng","console","log"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,UAA1B;AACA,OAAOC,KAAP,MAAkB,cAAlB;AACA,OAAOC,OAAP,MAAoB,eAApB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,OAAkB;AAAA,MAAfC,QAAe,QAAfA,QAAe;AACjC,MAAMC,QAAQ,GAAG;AAChBC,IAAAA,KAAK,EAAE,KADS;AAEhBC,IAAAA,MAAM,EAAE,MAFQ;AAGhBC,IAAAA,MAAM,EAAE,MAHQ;AAIhBC,IAAAA,YAAY,EAAE;AAJE,GAAjB;;AADiC,kBAOCV,QAAQ,CAAC,EAAD,CAPT;AAAA,MAOzBW,QAPyB;AAAA,MAOfC,WAPe;;AAQjC,MAAMC,KAAK,GAAG,wGAAd;;AARiC,mBASHb,QAAQ,CAAC,EAAD,CATL;AAAA,MASzBc,MATyB;AAAA,MASjBC,SATiB;;AAWjChB,EAAAA,SAAS,CAAC,YAAM;AACf,QAAGiB,SAAS,CAACC,WAAb,EAAyB;AACxBD,MAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyC,UAAAC,QAAQ,EAAI;AACpD,YAAMC,QAAQ,GAAGD,QAAQ,CAACL,MAAT,CAAgBM,QAAjC;AACA,YAAMC,SAAS,GAAGF,QAAQ,CAACL,MAAT,CAAgBO,SAAlC;AACA,YAAMC,IAAI,GAAG,CAAb;AACA,YAAMd,MAAM,GAAG,MAAf;AACA,YAAMD,KAAK,GAAG,KAAd;AACCK,QAAAA,WAAW,CAAC;AAAEQ,UAAAA,QAAQ,EAARA,QAAF;AAAYC,UAAAA,SAAS,EAATA,SAAZ;AAAuBC,UAAAA,IAAI,EAAJA,IAAvB;AAA6Bd,UAAAA,MAAM,EAANA,MAA7B;AAAqCD,UAAAA,KAAK,EAALA;AAArC,SAAD,CAAX;AACD,OAPD;AAQA;;AACDJ,IAAAA,OAAO,CAACoB,WAAR,CAAoBlB,QAApB,EAA8BmB,IAA9B,CAAmC,UAAAC,QAAQ,EAAI;AAAA,+BACzBA,QAAQ,CAACC,OAAT,CAAiB,CAAjB,CADyB;AAAA,UACtCC,GADsC,sBACtCA,GADsC;AAAA,UACjCC,GADiC,sBACjCA,GADiC;AAE9C,KAFD;AAGA,GAdQ,EAcN,EAdM,CAAT;AAeAC,EAAAA,OAAO,CAACC,GAAR,CAAYzB,QAAZ,EAAsB,yBAAtB;AACA,SACC,MAAC,KAAD,eACOM,QADP;AAEG,IAAA,KAAK,EAAEL,QAFV;AAGG,IAAA,QAAQ,EAAC,iCAHZ;AAIG,IAAA,oBAAoB,EAAEO,KAJzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADD;AAQA,CAnCD;;AAqCA,eAAeT,OAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Container } from './styles';\nimport MapGL from \"react-map-gl\";\nimport Geocode from 'react-geocode';\n\nconst MapBody = ({ cityName }) => {\n\tconst mapStyle = {\n\t\twidth: '80%',\n\t\theight: '70vh',\n\t\tmargin: 'auto',\n\t\tborderRadius: '16px'\n\t}\n\tconst [ viewport, setViewPort ] = useState({ });\n\tconst Token = \"pk.eyJ1Ijoic2hyZXl2aWpheXZhcmdpeWEiLCJhIjoiY2pzamxxbG5zMHppMTQ0cW91OTd0aHBwZCJ9.zT0Jji19YEj8pR5P495KrA\";\n\tconst [ coords, setCoords ] = useState({});\n\n\tuseEffect(() => {\n\t\tif(navigator.geolocation){\n\t\t\tnavigator.geolocation.getCurrentPosition(position => {\n\t\t\t\tconst latitude = position.coords.latitude;\n\t\t\t\tconst longitude = position.coords.longitude;\n\t\t\t\tconst zoom = 9;\n\t\t\t\tconst height = '70vh';\n\t\t\t\tconst width = '80%'\n\t\t\t\t setViewPort({ latitude, longitude, zoom, height, width });\n\t\t\t});\n\t\t}\n\t\tGeocode.fromAddress(cityName).then(response => {\n\t\t\tconst { lat, lng } = response.results[0]\n\t\t})\n\t}, [ ]);\n\tconsole.log(cityName, 'cityName inside Mapbody')\n\treturn (\n\t\t<MapGL\n\t\t   {...viewport}\n\t\t   style={mapStyle}\n\t\t   mapStyle=\"mapbox://styles/mapbox/dark-v10\"\n\t\t   mapboxApiAccessToken={Token}\n\t\t/>\n\t)\n};\n\nexport default MapBody;\n\n"]},"metadata":{},"sourceType":"module"}