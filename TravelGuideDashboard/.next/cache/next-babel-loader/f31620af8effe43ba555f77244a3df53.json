{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\shreyvijayvargiya\\\\Desktop\\\\CodingChallengeProjects\\\\TravelGuideDashboard\\\\components\\\\Searchbar\\\\index.jsx\";\n\nvar __jsx = React.createElement;\nimport React, { useRef, useEffect, useState } from 'react';\nimport { Container } from './styles';\nimport axios from 'axios';\n\nvar Searchbar = function Searchbar() {\n  var stateRef = useRef();\n  var cityRef = useRef();\n\n  var _useState = useState([]),\n      cities = _useState[0],\n      setCities = _useState[1];\n\n  var _useState2 = useState([]),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var statesUrl = 'https://indian-cities-api-nocbegfhqg.now.sh/cities';\n  useEffect(function () {\n    var states = [];\n    axios.get(statesUrl).then(function (res) {\n      res.data.map(function (item) {\n        if (states.indexOf(item.State) < 0) {\n          states.push(item.State);\n        }\n      });\n      setState(states);\n    });\n  }, []);\n\n  var handleCitySelect = function handleCitySelect() {\n    var stateName = stateRef.current.value;\n    console.log(stateName); // const cityUrl = `https://indian-cities-api-nocbegfhqg.now.sh/cities?State=${stateName}`\n    // axios.get(cityUrl).then((res) => {\n    // \tres.data.map(item => {\n    // \t\tsetCities((oldArray) => [ ...oldArray, item.City ]);\n    // \t});\n    // });\n  };\n\n  return __jsx(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 3\n    }\n  }, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 4\n    }\n  }, __jsx(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 6\n    }\n  }, \" Select State \"), __jsx(\"select\", {\n    id: \"state\",\n    ref: stateRef,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 6\n    }\n  }, state && state.map(function (item, i) {\n    return __jsx(\"option\", {\n      key: i,\n      value: item,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 8\n      }\n    }, item);\n  }))), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 4\n    }\n  }, __jsx(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, \" Select City \"), __jsx(\"select\", {\n    id: \"city\",\n    ref: cityRef,\n    onChange: function onChange() {\n      return handleCitySelect();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, cities && cities.map(function (item, i) {\n    return __jsx(\"option\", {\n      key: i,\n      value: item,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    }, item);\n  }))), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 4\n    }\n  }, __jsx(\"img\", {\n    src: \"/assets/addMarkerIcon.jpg\",\n    alt: \"Add Marker\",\n    width: 80,\n    height: 80,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  })), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 4\n    }\n  }, __jsx(\"img\", {\n    src: \"/assets/profile.jpg\",\n    width: 80,\n    height: 80,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  })));\n};\n\nexport default Searchbar;","map":{"version":3,"sources":["C:/Users/shreyvijayvargiya/Desktop/CodingChallengeProjects/TravelGuideDashboard/components/Searchbar/index.jsx"],"names":["React","useRef","useEffect","useState","Container","axios","Searchbar","stateRef","cityRef","cities","setCities","state","setState","statesUrl","states","get","then","res","data","map","item","indexOf","State","push","handleCitySelect","stateName","current","value","console","log","i"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport { Container } from './styles';\nimport axios from 'axios';\n\nconst Searchbar = () => {\n\tconst stateRef = useRef();\n\tconst cityRef = useRef();\n\tconst [ cities, setCities ] = useState([ ]);\n\tconst [ state, setState ] = useState([ ]);\n\tconst statesUrl = 'https://indian-cities-api-nocbegfhqg.now.sh/cities';\n\n\tuseEffect(() => {\n\t\tconst states = [];\n\t\taxios.get(statesUrl).then((res) => {\n\t\t\tres.data.map(item => {\n\t\t\t\tif(states.indexOf(item.State) < 0){\n\t\t\t\t\tstates.push(item.State)\n\t\t\t\t}\n\t\t\t});\n\t\t\tsetState(states);\n\t\t});\n\t\t\n\t}, [ ]);\n\t\n\tconst handleCitySelect = () => {\n\t\tconst stateName = stateRef.current.value;\n\t\tconsole.log(stateName);\n\t\t// const cityUrl = `https://indian-cities-api-nocbegfhqg.now.sh/cities?State=${stateName}`\n\t\t// axios.get(cityUrl).then((res) => {\n\t\t// \tres.data.map(item => {\n\t\t// \t\tsetCities((oldArray) => [ ...oldArray, item.City ]);\n\t\t// \t});\n\t\t// });\n\t};\n\treturn (\n\t\t<Container>\n\t\t\t<div>\n\t\t\t\t\t<label> Select State </label>\n\t\t\t\t\t{/* <input list=\"states\" placeholder=\"Select State\" ref={stateRef} /> */}\n\t\t\t\t\t<select id=\"state\" ref={stateRef}>\n\t\t\t\t\t\t{state && state.map((item, i) => (\n\t\t\t\t\t\t\t<option key={i} value={item}>{item}</option>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</select>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<label> Select City </label>\n\t\t\t\t<select  id=\"city\" ref={cityRef} onChange={() => handleCitySelect()}>\n\t\t\t\t\t{cities && cities.map((item, i) => (\n\t\t\t\t\t\t<option key={i} value={item}>{item}</option>\n\t\t\t\t\t))}\n\t\t\t\t</select>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<img src='/assets/addMarkerIcon.jpg' alt=\"Add Marker\" width={80} height={80}  />\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<img src=\"/assets/profile.jpg\" width={80} height={80} />\n\t\t\t</div>\n\t\t</Container>\n\t);\n};\nexport default Searchbar;\n\n"]},"metadata":{},"sourceType":"module"}