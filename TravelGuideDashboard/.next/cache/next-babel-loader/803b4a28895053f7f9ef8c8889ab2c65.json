{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shreyvijayvargiya\\\\Desktop\\\\CodingChallengeProjects\\\\TravelGuideDashboard\\\\components\\\\MapBody\\\\index.jsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useEffect, useState } from 'react';\nimport { Container } from './styles';\nimport MapGL from \"react-map-gl\";\n\nconst MapBody = () => {\n  const {\n    0: viewport,\n    1: setViewPort\n  } = useState({\n    latitude: 17.44212,\n    longitude: 78.391384,\n    zoom: 15\n  });\n  const Token = \"pk.eyJ1Ijoic2hyZXl2aWpheXZhcmdpeWEiLCJhIjoiY2pzamxxbG5zMHppMTQ0cW91OTd0aHBwZCJ9.zT0Jji19YEj8pR5P495KrA\";\n  console.log(viewport);\n  useEffect(() => {\n    function getCoords() {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(position => {\n          return {\n            lat: position.coords.latitude,\n            lng: position.coords.longitude\n          };\n        });\n      }\n    }\n\n    ;\n    console.log(getCoords());\n  }, []);\n  return __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 3\n    }\n  }, __jsx(MapGL, _extends({}, viewport, {\n    onViewportChange: viewport => setViewPort({\n      viewport\n    }),\n    mapStyle: \"mapbox://styles/mapbox/streets-v10\",\n    mapboxApiAccessToken: Token,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 4\n    }\n  })));\n};\n\nexport default MapBody;","map":{"version":3,"sources":["C:/Users/shreyvijayvargiya/Desktop/CodingChallengeProjects/TravelGuideDashboard/components/MapBody/index.jsx"],"names":["React","useEffect","useState","Container","MapGL","MapBody","viewport","setViewPort","latitude","longitude","zoom","Token","console","log","getCoords","navigator","geolocation","getCurrentPosition","position","lat","coords","lng"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,UAA1B;AACA,OAAOC,KAAP,MAAkB,cAAlB;;AAGA,MAAMC,OAAO,GAAG,MAAM;AACrB,QAAM;AAAA,OAAEC,QAAF;AAAA,OAAYC;AAAZ,MAA4BL,QAAQ,CAAC;AAC1CM,IAAAA,QAAQ,EAAE,QADgC;AAEpCC,IAAAA,SAAS,EAAE,SAFyB;AAGpCC,IAAAA,IAAI,EAAE;AAH8B,GAAD,CAA1C;AAKA,QAAMC,KAAK,GAAG,wGAAd;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYP,QAAZ;AACAL,EAAAA,SAAS,CAAC,MAAM;AACf,aAASa,SAAT,GAAqB;AACpB,UAAGC,SAAS,CAACC,WAAb,EAAyB;AACxBD,QAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyCC,QAAQ,IAAI;AACpD,iBAAQ;AAAEC,YAAAA,GAAG,EAAED,QAAQ,CAACE,MAAT,CAAgBZ,QAAvB;AAAiCa,YAAAA,GAAG,EAAEH,QAAQ,CAACE,MAAT,CAAgBX;AAAtD,WAAR;AACA,SAFD;AAGA;AACD;;AAAA;AACDG,IAAAA,OAAO,CAACC,GAAR,CAAYC,SAAS,EAArB;AAEA,GAVQ,EAUN,EAVM,CAAT;AAYA,SACC,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,KAAD,eACOR,QADP;AAEG,IAAA,gBAAgB,EAAEA,QAAQ,IAAIC,WAAW,CAAC;AAAED,MAAAA;AAAF,KAAD,CAF5C;AAGG,IAAA,QAAQ,EAAC,oCAHZ;AAIG,IAAA,oBAAoB,EAAEK,KAJzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADD,CADD;AAUA,CA9BD;;AAgCA,eAAeN,OAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Container } from './styles';\nimport MapGL from \"react-map-gl\";\n\n\nconst MapBody = () => {\n\tconst [ viewport, setViewPort ] = useState({\n\t\tlatitude: 17.44212,\n        longitude: 78.391384,\n        zoom: 15,\n\t});\n\tconst Token = \"pk.eyJ1Ijoic2hyZXl2aWpheXZhcmdpeWEiLCJhIjoiY2pzamxxbG5zMHppMTQ0cW91OTd0aHBwZCJ9.zT0Jji19YEj8pR5P495KrA\";\n\tconsole.log(viewport)\n\tuseEffect(() => {\n\t\tfunction getCoords() {\n\t\t\tif(navigator.geolocation){\n\t\t\t\tnavigator.geolocation.getCurrentPosition(position => {\n\t\t\t\t\treturn  { lat: position.coords.latitude, lng: position.coords.longitude };\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t\tconsole.log(getCoords())\n\t\n\t}, [ ]);\n\t\n\treturn (\n\t\t<Container>\n\t\t\t<MapGL \n\t\t\t   {...viewport}\n\t\t\t   onViewportChange={viewport => setViewPort({ viewport })}\n\t\t\t   mapStyle=\"mapbox://styles/mapbox/streets-v10\"\n\t\t\t   mapboxApiAccessToken={Token}\n\t\t\t/>\n\t\t</Container>\n\t)\n};\n\nexport default MapBody;\n\n"]},"metadata":{},"sourceType":"module"}