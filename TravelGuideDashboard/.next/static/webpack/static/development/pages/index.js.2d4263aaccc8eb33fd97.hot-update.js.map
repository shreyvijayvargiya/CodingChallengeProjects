{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.2d4263aaccc8eb33fd97.hot-update.js","sources":["webpack:///./components/Home/index.jsx","webpack:///./components/MapBody/index.jsx","webpack:///./components/Searchbar/index.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { MapBody, Searchbar } from '../index';\n\nconst Home = () => {\n\tconst [ cityName,  setCityName] = useState();\n\tconst [ stateName, setStateName ] = useState();\n\treturn (\n\t\t<div>\n\t\t\t<Searchbar \n\t\t\t\tcityName={cityName} \n\t\t\t\tstateName={stateName}\n\t\t\t\tsetCityName={setCityName}\n\t\t\t\tsetStateName={setStateName}\n\t\t\t/>\n\t\t\t<MapBody \n\t\t\t\tcityName={cityName}\n\t\t\t/>\n\t\t</div>\n\t  );\n};\nexport default Home ;\n","import React, { useEffect, useState } from 'react';\nimport { Container } from './styles';\nimport MapGL from \"react-map-gl\";\n\n\nconst MapBody = ({ cityName }) => {\n\tconst mapStyle = {\n\t\twidth: '80%',\n\t\theight: '70vh',\n\t\tmargin: 'auto',\n\t\tborderRadius: '16px'\n\t}\n\tconst [ viewport, setViewPort ] = useState({ });\n\tconst Token = \"pk.eyJ1Ijoic2hyZXl2aWpheXZhcmdpeWEiLCJhIjoiY2pzamxxbG5zMHppMTQ0cW91OTd0aHBwZCJ9.zT0Jji19YEj8pR5P495KrA\";\n\t\n\tuseEffect(() => {\n\t\tif(navigator.geolocation){\n\t\t\tnavigator.geolocation.getCurrentPosition(position => {\n\t\t\t\tconst latitude = position.coords.latitude;\n\t\t\t\tconst longitude = position.coords.longitude;\n\t\t\t\tconst zoom = 9;\n\t\t\t\tconst height = '70vh';\n\t\t\t\tconst width = '80%'\n\t\t\t\t setViewPort({ latitude, longitude, zoom, height, width });\n\t\t\t});\n\t\t}\n\t\tconsole.log(cityName, 'cityName inside Mapbody')\n\t}, [ ]);\n\n\treturn (\n\t\t<MapGL\n\t\t   {...viewport}\n\t\t   style={mapStyle}\n\t\t   mapStyle=\"mapbox://styles/mapbox/dark-v10\"\n\t\t   mapboxApiAccessToken={Token}\n\t\t/>\n\t)\n};\n\nexport default MapBody;\n\n","import React, { useRef, useEffect, useState } from 'react';\nimport { Container } from './styles';\nimport axios from 'axios';\n\nconst Searchbar = ({ cityName, stateName, setCityName, setStateName }) => {\n\t\n\tconst [ cities, setCities ] = useState([ ]);\n\tconst [ state, setState ] = useState([ ]);\n\tconst statesUrl = 'https://indian-cities-api-nocbegfhqg.now.sh/cities';\n\t\n\n\tuseEffect(() => {\n\t\tconst states = [ ];\n\t\taxios.get(statesUrl).then((res) => {\n\t\t\tres.data.map(item => {\n\t\t\t\tif(states.indexOf(item.State) < 0){\n\t\t\t\t\tstates.push(item.State)\n\t\t\t\t}\n\t\t\t});\n\t\t\tsetState(states);\n\t\t});\n\t}, [ ]);\n\t\n\tuseEffect(() => {\n\t\tconst cityUrl = `https://indian-cities-api-nocbegfhqg.now.sh/cities?State=${stateName}`\n\t\taxios.get(cityUrl).then((res) => {\n\t\t\tres.data.map(item => {\n\t\t\t\tsetCities((oldArray) => [ ...oldArray, item.City ]);\n\t\t\t});\n\t\t});\t\n\t}, [ stateName]);\n\t\n\treturn (\n\t\t<Container>\n\t\t\t<div>\n\t\t\t\t<h3> Select State </h3>\n\t\t\t\t<select id=\"state\" onChange={(event) => setStateName(event.target.value)}>\n\t\t\t\t\t{state && state.map((item, i) => (\n\t\t\t\t\t\t<option key={i} value={item}>{item}</option>\n\t\t\t\t\t))}\n\t\t\t\t</select>\n\t\t\t</div>\n\t\t\t{stateName && <div>\n\t\t\t\t<h3> Select City </h3>\n\t\t\t\t<select id=\"city\" onChange={(event) => setCityName(event.target.value)}>\n\t\t\t\t\t{cities && cities.map((item, i) => (\n\t\t\t\t\t\t<option key={i} value={item}>{item}</option>\n\t\t\t\t\t))}\n\t\t\t\t</select>\n\t\t\t</div>}\n\t\t\t<div>\n\t\t\t\t<img src='/assets/bars.png' alt=\"Add Marker\" width={50} height={50}  />\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<img src=\"/assets/profile_logo.png\" width={50} height={50} />\n\t\t\t</div>\n\t\t</Container>\n\t);\n};\nexport default Searchbar;\n\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;ACpBA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAFA;AAAA;AAAA;AACA;AAOA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAEA;AAGA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;ACvCA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAGA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAAA;;;;A","sourceRoot":""}